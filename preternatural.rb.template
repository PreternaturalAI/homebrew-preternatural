class <classname> < Formula
  desc "<classname> CLI Tool"
  homepage "https://github.com/PreternaturalAI/homebrew-preternatural"
  url
  sha256
  version

  def install
    # Unzip the main artifact bundle
    system "unzip", "-o", cached_download

    # Install executables and daemons
    [
      ["*-executable.zip", "-executable.zip"],
      ["*-daemon.zip", "-daemon.zip"]
    ].each do |glob_pattern, suffix|
      Dir.glob(glob_pattern).each do |zip_name|
        # Unzip the inner zip file directly
        system "unzip", "-o", zip_name
        
        # Extract tool name from the zip filename
        tool_name = File.basename(zip_name, suffix)

        # Install the binary
        binary_path = "#{tool_name}.artifactbundle/#{tool_name}/bin/#{tool_name}"
        bin.install binary_path if File.exist?(binary_path)
      end
    end
  end

  def post_install
    # Skip service start in CI / non-interactive environments
    if ENV["CI"] || !$stdin.tty?
      ohai "Skipping <toolname> daemon service startup in non-interactive environment"
      ohai "To start the service manually: sudo brew services start <toolname>"
      return
    end

    ohai "Checking if <daemonname> is already running as root..."

    # Check if <daemonname> is running as root
    <daemonname>_running_as_root = system("ps aux | grep <daemonname> | grep -v grep | grep -q root")

    if <daemonname>_running_as_root
      ohai "<daemonname> is already running as root, restarting with bootstrap..."
      system "<toolname> bootstrap restart"
      ohai "<toolname> daemon restarted successfully!"
    else
      ohai "Starting the <toolname> daemon service..."
      ohai "Installation of the daemon requires sudo access. Please enter your password in the system popup."

      # Use AppleScript to prompt for admin rights safely
      script = <<~APPLESCRIPT
        do shell script "brew services start <toolname>" with administrator privileges
      APPLESCRIPT

      system "osascript", "-e", script

      unless $?.success?
        opoo "Failed to start the <toolname> daemon service."
        ohai "You can manually start it later with: sudo brew services start <toolname>"
      else
        ohai "<toolname> daemon service started successfully!"
        ohai "You can stop the daemon using `sudo brew services stop <toolname>`"
        ohai "You can restart the daemon using `sudo brew services restart <toolname>`"
      end
    end
  end

  service do
    run [opt_bin/"<daemonname>"]
    run_type :immediate
    keep_alive true
    run_at_load true
    require_root true
    log_path var/"log/<daemonname>.log"
    error_log_path var/"log/<daemonname>.err.log"
  end
end